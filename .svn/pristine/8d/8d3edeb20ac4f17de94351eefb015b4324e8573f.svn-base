package com.czmz.mqtt.persistence.controller;


import com.alibaba.fastjson.JSONObject;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.czmz.mqtt.common.BaseFinal;
import com.czmz.mqtt.common.JsonResult;
import com.czmz.mqtt.online.entity.PPage;
import com.czmz.mqtt.persistence.entity.PersistenceRecord;
import com.czmz.mqtt.persistence.service.IPersistenceRecordService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author yjc
 * @since 2019-12-25
 */
@Api("持久化控制接口")
@RestController
@RequestMapping("persistence")
public class PersistenceRecordController {
    @Autowired
    private IPersistenceRecordService iPersistenceRecordService;
    @ApiOperation("获取规则列表")
    @PostMapping("getAll")
    JSONObject getAll(@RequestBody PPage page){
        return JsonResult.success(iPersistenceRecordService
                .selectAll(new Page(page.getCurrent(),page.getSize())));
    }
    @ApiOperation("添加修改规则")
    @PostMapping("update")
    JSONObject update(@RequestBody PersistenceRecord persistenceRecord){
        iPersistenceRecordService.saveOrUpdate(persistenceRecord);
        return JsonResult.success("success");
    }
    @ApiOperation("删除规则")
    @PostMapping("del")
    JSONObject del(@RequestBody PersistenceRecord persistenceRecord){
        iPersistenceRecordService.remove(Wrappers.<PersistenceRecord>lambdaQuery()
                .eq(PersistenceRecord::getId,persistenceRecord.getId()));
        return JsonResult.success("success");
    }
    @ApiOperation("禁用规则")
    @GetMapping("ban")
    JSONObject ban(Long id){
        PersistenceRecord persistence=new PersistenceRecord();
        persistence.setId(id);
        persistence.setStatus(BaseFinal.BAN);
        iPersistenceRecordService.updateById(persistence);
        return JsonResult.success("success");
    }
    @ApiOperation("解禁规则")
    @GetMapping("unBan")
    JSONObject unBan(Long id){
        PersistenceRecord persistence=new PersistenceRecord();
        persistence.setId(id);
        persistence.setStatus(BaseFinal.UNBAN);
        iPersistenceRecordService.updateById(persistence);
        return JsonResult.success("success");
    }
}
