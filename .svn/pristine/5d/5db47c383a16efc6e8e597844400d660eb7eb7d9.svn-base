package com.czmz.mqtt.userRecord.controller;


import com.alibaba.fastjson.JSONObject;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.czmz.mqtt.company.entity.CompanyRecord;
import com.czmz.mqtt.company.service.ICompanyRecordService;
import com.czmz.mqtt.config.JwtConfig;
import com.czmz.mqtt.online.entity.PPage;
import com.czmz.mqtt.userRecord.entity.RetUser;
import com.czmz.mqtt.userRecord.service.IUserRecordService;
import com.czmz.mqtt.common.JsonResult;
import com.czmz.mqtt.userRecord.entity.UserRecord;
import io.jsonwebtoken.Claims;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author yjc
 * @since 2019-11-29
 */
@Api(value="登录接口")
@RestController
@RequestMapping()
public class UserRecordController {
    @Autowired
    private IUserRecordService iUserRecordService;
    @Autowired
    private ICompanyRecordService iCompanyRecordService;
    @Resource
    private JwtConfig jwtConfig ;
    @PostMapping("/login")
    @ApiOperation("/登录")
    JSONObject login(@RequestBody UserRecord user, HttpServletRequest httpServletRequest){
        UserRecord tempUser=iUserRecordService.getOne(Wrappers.<UserRecord>lambdaQuery()
                .eq(UserRecord::getUsername,user.getUsername()));
        if(Objects.isNull(tempUser))
            return JsonResult.fail("用户不存在!",JsonResult.ERROR_CODE);
        if(!user.getPassword().equals(tempUser.getPassword()))
            return JsonResult.fail("用户名密码错误!",JsonResult.ERROR_CODE);
        RetUser retUser=iUserRecordService.getUser(tempUser.getUsername());
        String token = jwtConfig.getToken(JSONObject.toJSONString(retUser));
        Map<String,String> map=new HashMap<>();
        map.put("token",token);
        return JsonResult.success(map);
    }
    @GetMapping("/getInfo")
    JSONObject getInfo(@RequestHeader("x-token") String token){
        Claims claims=jwtConfig.getTokenClaim(token);
        String subject=claims.getSubject();
        JSONObject json=JSONObject.parseObject(subject);
        CompanyRecord company=iCompanyRecordService.getById(json.getInteger("identityId"));
        json.put("company",company.getCompany());
        return JsonResult.success(json);
    }
    @PostMapping("/register")
    JSONObject register(@RequestBody UserRecord user){
        if(Objects.isNull(user.getCompanyId())
                || Objects.isNull(user.getIdentityId())
                || Objects.isNull(user.getUsername())
                || Objects.isNull(user.getPassword())){
            return JsonResult.fail("注册信息不全！",JsonResult.UNPASS_CODE);

        }
        UserRecord temp=iUserRecordService.getOne(Wrappers.<UserRecord>lambdaQuery()
                .eq(UserRecord::getUsername,user.getUsername()));
        if(!Objects.isNull(temp))
            return JsonResult.fail("用户名被占用！",JsonResult.ERROR_CODE);
        iUserRecordService.save(user);
        return JsonResult.success("注册成功");
    }




}
